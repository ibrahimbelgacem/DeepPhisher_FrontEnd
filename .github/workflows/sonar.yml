name: Build & Analyze Frontend

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Analyze
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl --fail http://localhost:9000/api/system/status || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Wait for SonarQube to be ready
        run: |
          echo "⏳ Attente de SonarQube..."
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; then
              echo "✅ SonarQube est prêt"
              break
            fi
            sleep 5
          done

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build --if-present

      - name: Install Sonar Scanner
        run: npm install -g sonar-scanner

      - name: SonarQube Analysis
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: admin
        run: |
          sonar-scanner \
            -Dsonar.projectKey=DeepPhisher_FrontEnd \
            -Dsonar.projectName=DeepPhisher_FrontEnd \
            -Dsonar.sources=src \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN} -X
