name: Build & Analyze Frontend

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build --if-present

      # DÉBOGAGE COMPLET
      - name: Debug Environment and Connectivity
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "=== DÉBOGAGE COMPLET ==="
          echo "Variables d'environnement:"
          echo "SONAR_HOST_URL: ${SONAR_HOST_URL}"
          echo "SONAR_TOKEN défini: $([ -n "$SONAR_TOKEN" ] && echo "OUI" || echo "NON")"
          echo ""
          echo "Test de connectivité réseau:"
          echo "Ping vers l'host SonarQube..."
          ping -c 3 $(echo $SONAR_HOST_URL | sed 's|http[s]*://||' | cut -d: -f1 ) || echo "Ping échoué"
          echo ""
          echo "Test HTTP vers SonarQube:"
          curl -v --connect-timeout 10 --max-time 30 "${SONAR_HOST_URL}/api/system/status" || echo "Connexion HTTP échouée"
          echo ""
          echo "Résolution DNS:"
          nslookup $(echo $SONAR_HOST_URL | sed 's|http[s]*://||' | cut -d: -f1 ) || echo "Résolution DNS échouée"

      # Si le débogage montre que la connectivité fonctionne, utiliser cette méthode
      - name: Manual SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          # Créer un fichier de configuration temporaire
          cat > sonar-scanner.properties << EOF
          sonar.host.url=${SONAR_HOST_URL}
          sonar.token=${SONAR_TOKEN}
          sonar.projectKey=DeepPhisher_FrontEnd
          sonar.projectName=DeepPhisher_FrontEnd
          sonar.sources=src
          sonar.sourceEncoding=UTF-8
          EOF
          
          # Installer et lancer le scanner
          npm install -g sonarqube-scanner
          sonar-scanner -Dproject.settings=sonar-scanner.properties -X
